---
title: Availability Options
owner: MySQL
---

<strong><%= modified_date %></strong>

This topic describes and contrasts the topologies for <%= vars.product_full %> and explains the kind of
availability each provides.

## <a id="topologies"></a> <%= vars.product_full %> Topologies

The topologies offered by <%= vars.product_short %> are:

+ **Single node:** This one-VM topology is inexpensive and good for testing.
You can use this topology for apps where high availability is not important.

+ **Leader-follower:** This two-VM topology gives you redundancy through failover of the leader VM
  to the follower VM.
  For more information, see [About Leader-Follower](./about-leader-follower.html).

+ **Highly available (HA) cluster:** This three-VM plus jumpbox cluster uses a patched Galera cluster,
Percona XtraDB Cluster (PXC), to provide the greatest availability of the topologies.
For more information, see [About Highly Available Clusters](./about-ha.html).

+ **<%= vars.single_leader_plan %>:** This two-VM topology enables you to provision a leader
and follower VM in two different foundations. For more information,
see [About <%= vars.single_leader_plan %>](./about-multi-site.html).

## <a id="pros-and-cons"></a> Pros and Cons

The table below lists some key characteristics of the topologies to help you decide
which one is best for your developers.

<table class="nice">
  <tr><th>Topology</th><th>VMs needed</th><th>Pros</th><th>Cons</th></tr>
  <tr><td><strong>Single node</strong></td><td>One</td>
      <td>
          <ul>
            <li>Simple</li>
            <li>Least expensive</li>
            <li>Straightforward operator experience</li>
            <li>Easy for the developer</li>
          </ul>
       </td>
      <td>
          <ul>
            <li>No redundancy</li>
            <li>All data since last backup can be lost</li>
            <li>Data recovery requires restore from backup</li>
          </ul>
       </td>
  </tr>
  <tr><td><strong>Leader-follower</strong></td><td>Two</td>
      <td>
          <ul>
            <li>Two copies of the data</li>
            <li>Data recovery is faster than single node</li>
          </ul>
       </td>
      <td>
          <ul>
            <li>Less flexible tuning than single node</li>
            <li>Developers require some technical understanding</li>
            <li>Operator must initiate failover</li>
          </ul>
       </td>
  </tr>
  <tr><td><strong>Highly available cluster</strong></td><td>Three and a jumpbox VM</td>
      <td>
          <ul>
            <li>Tightest RPO and RTO for downtime, including downtime for upgrades.<br>
                See <a href="#rpo-and-rto">RPOs and RTOs</a> below.</li>
          </ul>
       </td>
      <td>
          <ul>
            <li>Most expensive</li>
            <li>Less flexible tuning than single node</li>
            <li>Developers require moderate technical understanding</li>
          </ul>
       </td>
  </tr>

  <tr><td><strong><%= vars.single_leader_plan %></strong></td><td>Two</td>
      <td>
          <ul>
            <li>Two copies of the data</li>
            <li>Data recovery is faster than single node</li>
            <li>Resilience to data center outages and upgrades</li>
            <li>Developers can initiate failover</li>
          </ul>
       </td>
      <td>
          <ul>
            <li>Less flexible tuning than single node</li>
            <li>Developers require some technical understanding</li>
          </ul>
       </td>
  </tr>
</table>


## <a id="rpo-and-rto"></a> RPOs and RTOs

Recovery point objective (RPO) and recovery time objective (RTO) are important considerations
for availability.

The tables below describe the RPOs and RTOs for the topologies.

### <a id="rpo"></a> RPOs

This table compares the recovery point objectives for the topologies.

<table class="nice">
  <tr><th>Type of downtime</th>
    <th>Single Node</th>
    <th>Leader-Follower</th>
    <th>Highly Available Cluster</th>
    <th><%= vars.single_leader_plan %></th>
  </tr>
  <tr><td><strong>Planned Maintenance</strong></td><td>Zero</td>
      <td>Zero</td><td>Zero</td><td>Zero</td></tr>
  <tr><td><strong>Unplanned Downtime</strong></td><td>Zero</td>
      <td>Replica lag, or zero if in sync mode</td><td>Almost zero*</td><td>Replica lag</td></tr>
  <tr><td><strong>Data Recovery</strong></td><td>Time since last backup</td>
      <td>The time to initialize the follower VM, or zero if in sync mode</td><td>Almost zero*</td><td>Replica lag</td></tr>
</table>

 *Database clients are notified that incomplete transactions are not saved.

### <a id="rto"></a> RTOs

This table compares the recovery time objectives for the topologies.

<table class="nice">
  <tr><th>Type of downtime</th>
    <th>Single Node</th>
    <th>Leader-Follower</th>
    <th>Highly Available Cluster</th>
    <th><%= vars.single_leader_plan %></th></tr>
  <tr><td><strong>Planned Maintenance</strong></td><td>Time required to recreate the VM and reconnect to storage</td>
      <td>Time required depends on the type of maintenance</td>
      <td>Almost zero*</td>
    <td>Time for developer to initiate switchover and for switchover to complete</td></tr>
  <tr><td><strong>Unplanned Downtime</strong></td><td>Time required to recreate the VM and reconnect to storage</td>
      <td>Time required to restore the VM or time for operator to initiate failover and
          for failover to complete</td>
      <td>Almost zero*</td>
    <td>Time for developer to initiate failover and for failover to complete</td></tr>
  <tr><td><strong>Data Recovery</strong></td><td>Time to restore from backup</td>
      <td>Time for operator to initiate failover and for failover to complete</td><td>Almost zero*</td>
    <td>Time for developer to initiate failover and for failover to complete</td></tr>
</table>

 *This includes time for apps to reconnect to the MySQL service instance.


## <a id="risk"></a> Risk

When choosing a topology, risk is a factor to consider.
Risk, in this case, encompasses the likelihood of:

+ Operators being interrupted to perform disaster recovery

+ Encountering issues because of the complexity of the topology and technology

Single node topology has the lowest risk.
Highly available clusters have the highest risk.

<table class="nice">
  <tr><th width=50%>Topology</th><th>Risk-level</th></tr>
  <tr><td><strong>Single node</strong></td><td>Low</td></tr>
  <tr><td><strong>Leader-follower</strong></td><td>Medium</td></tr>
  <tr><td><strong>Highly available cluster</strong></td><td>High</td></tr>
  <tr><td><strong><%= vars.single_leader_plan %></strong></td><td>Medium-high</td></tr>
</table>
