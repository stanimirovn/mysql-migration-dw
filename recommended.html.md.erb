---
title: VMware Tanzu SQL with MySQL for VMs Recommended Usage and Limitations
---

## <a id="usecases"></a> Recommended Use Cases

MySQL is a powerful open-source relational database used by apps since the mid-90s.
Developers have relied on MySQL as a first step to storing, processing and sharing data.
As its user community has grown,
MySQL has become a robust system capable of handling a wide variety of use cases
and very significant workloads.
Unlike other traditional databases which centralize and consolidate data,
MySQL lends itself to dedicated deployment supporting the “shared nothing”
 context of building apps in the cloud.

##<a id="ondemand"></a> About On-Demand Plans
* Each on-demand plan instance is deployed to its own VM and is suitable for production workloads.
* The maximum-number of on-demand plan instances available to developers is set by the operator and
enforced on both a global and per-plan level quota.
* Operators can update the plan settings,
including the VM size and disk size after the plans have been created.
**Operators should not downsize the VMs or disk size as this can cause data loss in pre-existing instances.**
* All plans deploy a single VM of the specified size with the specified disk type.
* Cannot scale down the size of VMs on the plan once deployed (this protects against data loss).
* The default maximum number of connections is set at 750.

## <a id="resources"></a> Resource Usage Planning for On-Demand Plans

For information on setting limits and calculating costs for on-demand service instances,
see [Setting Limits for On-Demand Service Instances](./set-quotas.html).

##<a id="azs"></a> Availability Using Multiple AZs

<%= vars.product_full %> supports configuring multiple availability zones (AZs).
However, assigning multiple AZs to MySQL jobs does not guarantee high availability.

* You can assign on-demand plans to any of the configured AZs.
* BOSH randomly deploys service instances across configured AZs.
  This minimizes the impact of an AZ outage and removes single points
  of failure.
* For all <%= vars.product_short %> plans, select three AZs.
Choosing three AZs does not increase the number of AZs assigned to service instances to three.

##<a id="downtime"></a> Downtime During Redeploys

By default, <%= vars.product_short %> does a rolling deploy during upgrades or when you apply
configuration changes.
For single node and leader-follower plans, this results in <%= vars.product_short %>
being inaccessible to apps for a brief period of time.

If you are using a HA cluster plan, <%= vars.product_short %> uses rolling redeploys
and your service does not incur downtime.
You can mitigate downtime by using HA cluster plans.

For more information about downtime in <%= vars.product_short %>,
see [RPOs and RTOs](.//availability-options.html#rpo-and-rto).

##<a id="persistent"></a> Persistent Disk Usage


The persistent disk receives, temporarily stores, and encrypts MySQL backups.
This results in increased disk usage while backups are being processed.
For single node and leader-follower service plans, backups are processed on the MySQL VM.
For highly available (HA) clusters, backups are processed on the jumpbox VM.

In addition to backups, the persistent disk also stores InnoDB redo logs and binlogs.
InnoDB redo logs use a static amount of disk size.
If your app is write-heavy,
increase your persistent disk to accommodate the binlogs.

For the amount of persistent disk required for your service plan, see the following sections:

* [Single Node and Leader-Follower](#single-node)
* [Multi-Site Replication](#multi-site)
* [HA Cluster Jumpbox](#ha-cluster-jumpbox)
* [HA Cluster Node](#ha-cluster-node)

[//]: # (Edit the below diagrams here: https://docs.google.com/presentation/d/1G-4BYAt0TI7XIXlS8ahHWzgnAZX6-8Ux9B9y73JV9u4/edit?usp=sharing) 

<h3> <a id="single-node"></a> Single Node and Leader-Follower</h3>

You can configure the persistent disk size for single node or leader-follower VMs. For 
instructions for configuring disk size, see [Configure Service Plans](./install-config.html#active).

Use the following table to determine the amount of persistent disk space you need:

<table>
  <tr>
    <th>InnoDB Redo Logs</th>
    <th>Total Disk Size</th>
    <th>Minimum Total Disk Size</th>
  </tr>
  <tr>
    <td>512 MB</td>
    <td>3N + 512MB</td>
    <td>5 GB</td>
  </tr>
</table>


In the **Total Disk Size** formula from the table above, `N` represents the following items in equal value:

- Maximum app data. Remember to include binlogs in your size estimate for app data.
- Data for copied backups.
- Data for compression and encryption.

Each `N` combined makes `3N`, as seen in the formula.

The following diagram shows how persistent disk space is used:

<img alt="Persistent Disk diagram.
    The information depicted in the diagram is explained above." width="280" src="./images/persistent-disk-single-node.png"/>

<h3> <a id="multi-site"></a> Multi-Site Replication </h3>

You can configure the persistent disk size for Multi-Site Replication VMs. For 
instructions for configuring disk size, see [Configure Service Plans](./install-config.html#active).

Use the following table to determine the amount of persistent disk space you need:

<table>
  <tr>
    <th>InnoDB Redo Logs</th>
    <th>Total Disk Size</th>
    <th>Minimum Total Disk Size</th>
  </tr>
  <tr>
    <td>2 GB</td>
    <td>3N + 2 GB</td>
    <td>5 GB</td>
  </tr>
</table>


In the **Total Disk Size** formula from the table above, `N` represents the following items in equal value:

- Maximum app data. Remember to include binlogs in your size estimate for app data.
- Data for copied backups.
- Data for compression and encryption.

Each `N` combined makes `3N`, as seen in the formula.

The following diagram shows how persistent disk space is used:

<img alt="Persistent Disk diagram.
    The information depicted in the diagram is explained above." width="280" src="./images/persistent-disk-multi-site.png"/>

<h3> <a id="ha-cluster-jumpbox"></a> HA Cluster Jumpbox </h3>

You can configure the persistent disk size for HA cluster jumpbox VMs. For 
instructions for configuring disk size, see [Configure Service Plans](./install-config.html#active).

Use the following table to determine the amount of persistent disk space you need:

<table>
  <tr>
    <th>InnoDB Redo Logs</th>
    <th>Total Disk Size</th>
    <th>Minimum Total Disk Size</th>
  </tr>
  <tr>
    <td>2 GB</td>
    <td>2N + 2 GB</td>
    <td>10 GB</td>
  </tr>
</table>


In the **Total Disk Size** formula from the table above, `N` represents the following items in equal value:

- Data for copied backups.
- Data for compression and encryption.

Each `N` combined makes `2N`, as seen in the formula.

The following diagram shows how persistent disk space is used:

<img alt="Persistent Disk diagram.
    The information depicted in the diagram is explained above." width="280" src="./images/persistent-disk-multi-site.png"/>


<h3> <a id="ha-cluster-jumpbox"></a> HA Cluster Jumpbox </h3>

You can configure the persistent disk size for HA cluster jumpbox VMs. For 
instructions for configuring disk size, see [Configure Service Plans](./install-config.html#active).

Use the following table to determine the amount of persistent disk space you need:

<table>
  <tr>
    <th>InnoDB Redo Logs</th>
    <th>Total Disk Size</th>
    <th>Minimum Total Disk Size</th>
  </tr>
  <tr>
    <td>2 GB</td>
    <td>2N + 2 GB</td>
    <td>10 GB</td>
  </tr>
</table>


In the **Total Disk Size** formula from the table above, `N` represents the following items in equal value:

- Data for copied backups.
- Data for compression and encryption.

Each `N` combined makes `2N`, as seen in the formula.

The following diagram shows how persistent disk space is used:

<img alt="Persistent Disk diagram.
    The information depicted in the diagram is explained above." width="280" src="./images/persistent-disk-multi-site.png"/>


<h3> <a id="ha-cluster-node"></a> HA Cluster Node </h3>

You can configure the persistent disk size for HA cluster node VMs. For 
instructions for configuring disk size, see [Configure Service Plans](./install-config.html#active).

Use the following table to determine the amount of persistent disk space you need:

<table>
  <tr>
    <th>InnoDB Redo Logs</th>
    <th>Total Disk Size</th>
    <th>Minimum Total Disk Size</th>
  </tr>
  <tr>
    <td>2 GB</td>
    <td>N + 2 GB</td>
    <td>5 GB</td>
  </tr>
</table>

In the **Total Disk Size** formula from the table above, `N` represents maximum app data. Remember to include binlogs in your size estimate for app data.

The following diagram shows how persistent disk space is used:

<img alt="Persistent Disk diagram.
    The information depicted in the diagram is explained above." width="280" src="./images/persistent-disk-ha-node.png"/>



  

