---
title: Installing and Configuring VMware Tanzu SQL with MySQL for VMs
owner: MySQL
---

<strong><%= modified_date %></strong>


This topic provides instructions to operators
about how to install, configure, and deploy the <%= vars.product_full %> tile.  The
<%= vars.product_short %> service enables developers to create and use MySQL
service instances on demand.

## <a id="rbac"></a>Role-Based Access in <%= vars.ops_manager %>

<%= vars.ops_manager %> admins can use Role-Based Access Control (RBAC) to manage which
operators can make deployment changes, view credentials, and manage user roles in <%= vars.ops_manager %>.
Your role permissions might not permit you to do every procedure in this topic.

For more information about roles in <%= vars.ops_manager %>, see
    <a href="https://docs.pivotal.io/pivotalcf/opsguide/config-rbac.html#about">
        Roles in <%= vars.ops_manager %></a>.</p>

## <a id="prereq"></a> Prerequisites

Before you install the <%= vars.product_short %> tile, you must:

+ [Create an App Security Group for <%= vars.product_short %>](#asg).
+ [Enable the BOSH Resurrector](#resurrector).
+ [Prepare for TLS](./prepare-tls.html). Required to enable TLS and required for <%=vars.single_leader_plan %>
  and HA cluster plans.
+ [Prepare for <%= vars.single_leader_plan %>](./prepare-multi-site.html): Only required if you
want to replicate data across multiple foundations or data centers.

### <a id="asg"></a> Create an App Security Group for <%= vars.product_short %>

To enable apps running on <%= vars.app_runtime_full %> to communicate with the MySQL service network,
you must create an App Security Group (ASG).
The ASG enables smoke tests to run when you first install the <%= vars.product_short %> service
and apps to access the service after it is installed.

To create an ASG for <%= vars.product_short %>:

1. Navigate to **<%= vars.ops_manager %> Installation Dashboard** > **BOSH Director**.

1. Click **Create Networks**.

1. Click your services network and record the **CIDR**.
    ![In the 'Create Networks' pane, in the 'Networks' section the 'services'
    network is expanded. The 'Name', 'Google Network Name', and 'CIDR', fields are
    shown.](opsman-dir-reserved-ips.png)

1. Create a JSON file named `mysql-asg.json` using the template below:

    ```json
    [
      {
        "protocol": "tcp",
        "destination": "CIDR",
        "ports": "3306"
      }
    ]
    ```
    Where `CIDR` is the CIDR that you recorded in the above step.

1. Create an ASG by running:

    ```
    $ cf create-security-group p.mysql ./mysql-asg.json
    ```

1. Bind the ASG to all running apps by running:

     ```
    $ cf bind-running-security-group p.mysql
    ```

For more information about ASGs,
see [App Security Groups](http://docs.pivotal.io/pivotalcf/concepts/asg.html#asg-individual).


### <a id="resurrector"></a> Enable the BOSH Resurrector

VMware recommends enabling the BOSH Resurrector when installing <%= vars.product_short %>.
The BOSH Resurrector increases the availability of <%= vars.product_short %> by restarting and resuming MySQL service.

The BOSH Resurrector does the following:

- Reacts to hardware failures and network disruptions by restarting VMs on active, stable hosts
- Detects operating system failures by continuously monitoring VMs and restarting them as required
- Continuously monitors the BOSH Agent running on each service instance VM and restarts the VM as required

For more information about the BOSH Resurrector,
see [BOSH Resurrector](https://docs.pivotal.io/pivotalcf/customizing/resurrector.html#bosh-resurrector).

 To enable the BOSH Resurrector:

1. Navigate to **<%= vars.ops_manager %> Installation Dashboard** > **BOSH Director**.

2. Click **Director Config**.

3. Select the **Enable VM Resurrector Plugin** checkbox.

4. Click **Save**.

## <a id="install"></a> Download and Import the Tile

To download and import the <%= vars.product_short %> tile:

1. Download the product file from [<%= vars.product_network %>](https://network.pivotal.io/products/pivotal-mysql/).

1. Navigate to the **<%= vars.ops_manager %> Installation Dashboard** and click **Import a Product** to upload the product file.

1. Under **Import a Product**, click **+** next to the version number of <%= vars.product_short %>.
   This adds the tile to your staging area.

1. Click the newly-added **<%= vars.product_short %>** tile to open its configuration panes.

    ![On the left side of the image, 'Assign AZs and Networks' is selected.
    The 'AZ and Network Assignments' configuration pane is shown.
    See the following section for a description of the fields in this pane.](config-azs.png)

## <a id="config-on-demand"></a> Configure the Tile

To configure the <%= vars.product_short %> tile, do the procedures below.

###<a id="azs"></a> Configure AZs and Networks

To configure an availability zone (AZ) to run the service broker
and networks for the broker and MySQL service instances:

1. Click **Assign AZs and Networks**.

1. Configure the fields as follows:
  <table>
    <tr><th>Field</th><th>Instructions</th></tr>
    <tr><td><strong>Place singleton jobs in</strong></td>
        <td>Select the AZ that you want the MySQL broker VM to run in. The broker runs as a singleton job.</td></tr>
    <tr><td><strong>Balance other jobs in</strong></td>
        <td>Ignore; not used.</td></tr>
    <tr><td><strong>Network</strong></td>
        <td>Select a subnet for the MySQL broker. This is typically the same subnet
            that includes the <%= vars.app_runtime_full %> (<%= vars.app_runtime_abbr %>) component VMs.<br>
            This network is represented by the Default Network in diagram in <a href="./about.html#on-demand">Default Network and Service Network</a>.
            </td></tr>
    <tr><td><strong>Service Network</strong></td>
        <td>Select the subnet for the on-demand service instances.
          This network is represented by the Service Network in diagram in <a href="./about.html#on-demand">Default Network and Service Network</a>.
            <br><br>
            If you are adding IPsec to encrypt MySQL communication, VMware recommends that you deploy MySQL to its own network
            to avoid conflicts with services that are not IPsec compatible.
         </td></tr>
  </table>
    <p class="note warning"><strong>Warning:</strong> You cannot change the regions or networks
    after you <strong>Apply Changes</strong>.
  </p>

1. Click **Save**.

###<a id="active"></a> Configure Service Plans


<%= vars.product_short %> enables you to configure as many as nine service plans.
Each service plan has a corresponding section in the tile configuration, such as **Plan 1**, **Plan 2**, and so on.

By default, plans 1 through 3 are active and plans 4 through 9 are inactive.
The procedures below describe how to change these defaults.

<p class="note warning"><strong>Warning:</strong>
  You must not set <strong>Plan 1</strong> to <strong>Inactive</strong>.
  If you deactivate <strong>Plan 1</strong>, your installation fails when you apply changes.
</p>

####<a name="one-node-plans"></a> About Creating Plans for Restoring Multi-Node Service Instances

If you offer leader-follower or highly available (HA) cluster plans,
then you must configure single-node or <%= vars.single_leader_plan %> plans that can be used
to restore a multi-node plan from backup.

<table class="nice">
<col width="33%">
	<tr>
		<th>If you offer service plans of type…</th>
		<th>Then configure a service plan of type…</th>
	</tr>
	<tr>
		<td>leader-follower</td>
		<td>single node, with the persistent disk as large
                    as the largest leader-follower plan offered.</td>
	</tr>
	<tr>
		<td>HA cluster</td>
		<td><%= vars.single_leader_plan %>, with the persistent disk as large
                    as the largest HA cluster plan offered.</td>
	</tr>
</table>

For information about how multi-node service instances are restored,
see <a href="./backup-restore.html#restore">Restore a Service Instance</a>
in <em>Backing Up and Restoring <%= vars.product_full %></em>.

#### Procedure for Configuring Service Plans

For each plan that you want to use in your deployment:

1. Click the section for the plan. For example, **Plan 1**.

1. Select the plan for your desired topology.

    <%= image_tag("plan-types-2-8.png", :alt => "The 'Plan' section is shown. The radio button for 'Inactive' is selected.", :width => "300") %>


    The tabs below expand to show an example screenshot of each plan:

    <style>
    .tab {
        overflow: hidden;
        border: 1px solid #ccc;
        background-color: #f1f1f1;
    }

    /* Style the buttons that are used to open the tabcontent */
    .tab button {
        background-color: inherit;
        float: left;
        border: inherit;
        outline: none;
        cursor: pointer;
        padding: ;
        transition: 0.3s;
    }

    /* Change background color of buttons on hover */
    .tab button :hover {
        background-color: #ddd;
    }

    /* Create an active/current tablink class */
    .tab button.active {
        background-color: #ccc;
    }

    /* Style the tab content */
    .tabcontent {
        display: none;
        padding: 6px 12px;
        border: 1px solid #ccc;
        border-top: none;
    }
    </style>

    <script>
    function openDocs(evt, docsName) {
        // Declare all variables
        var i, tabcontent, tablinks;
        // Get all elements with class="tabcontent" and hide them
        tabcontent = document.getElementsByClassName("tabcontent");

        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }

        // Get all elements with class="tablinks" and remove the class "active"
        tablinks = document.getElementsByClassName("tablinks");

        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }

        // Show the current tab, and add an "active" class to the button that opened the tab
        document.getElementById(docsName).style.display = "block";
        evt.currentTarget.className += " active";
    }
    </script>


    <div class="tab">
      <!- Tab headers and links ->
      <button class="tablinks active" onclick="openDocs(event, 'tab1')">Single Node</button>
      <button class="tablinks" onclick="openDocs(event, 'tab2')">Leader-Follower</button>
      <button class="tablinks" onclick="openDocs(event, 'tab3')">HA Cluster</button>
      <button class="tablinks" onclick="openDocs(event, 'tab4')"> <%= vars.single_leader_plan %> </button>
    </div>


    <div id="tab1" class="tabcontent" style="display:block">
      <img src="./images/single-node-plan.png"
      alt="The 'Plan' section is shown and the radio button next to 'Single Node' is selected.
      The table in the next step describes the fields that are revealed after selecting this plan.">
    </div>
    <div id="tab2" class="tabcontent">
      <img src="./images/leader-follower-plan.png"
      alt="The 'Plan' section is shown and the radio button next to 'Leader Follower' is selected.
      The table in the next step describes the fields that are revealed after selecting this plan.">
    </div>
    <div id="tab3" class="tabcontent">
      <img src="./images/ha-plan.png"
      alt="The 'Plan' section is shown and the radio button next to 'HA cluster' is selected.
      The table in the next step describes the fields that are revealed after selecting this plan.">
    </div>
    <div id="tab4" class="tabcontent">
      <img src="./images/multi-site-plan.png"
      alt="The 'Plan' section is shown and the radio button next to 'Multi-Site Replication' is selected.
      The table in the next step describes the fields that are revealed after selecting this plan.">
    </div>


1. Configure the fields as follows:
    <p class="note"><strong>Note:</strong> If you want to replicate data across multiple foundations or data centers,
    you must configure a <%= vars.single_leader_plan %> plan in both foundations using the same configurations.</p>
  <table>
    <tr><th>Field</th><th>Description</th></tr>
    <tr><td><strong>Service Plan Access</strong></td>
        <td>Select one of the following options:<br>
            <ul><li> <strong>Enable (Default):</strong> Gives access to all orgs
              and displays the service plan to all developers in the Marketplace.
                </li>
                <li><strong>Disable:</strong> Disables access to all orgs and hides the service plan
                  to all developers in the Marketplace.
                  This disables creating new service instances of this plan.
                </li>
                <li><strong>Manual:</strong> Lets you manually control service access with the cf CLI.
                    For more information, see <a href="./service-plan.html">Controlling Access to Service Plans by Org</a>.
                </li>
        </ul></td></tr>
    <tr><td><strong>Plan Name</strong></td>
        <td>Accept the default or enter a name.
            This is the name that appears in the Marketplace for developers.</td></tr>
    <tr><td><strong>Plan Description</strong></td>
        <td>Accept the default or enter a description to help developers understand plan features.
            VMware recommends adding VM type details and disk size to this field.
        </td></tr>
    <tr><td><strong>Plan Quota</strong></td>
        <td>Enter the maximum number of service instances that can exist at one time.
          If the plan quota field is blank, the plan quota is set to the global quota by default.
          If you have selected the highly available cluster plan, the Plan Quota maximum is 5. <br>
        For information about the global quota, see <a href="./set-quotas.html">Setting Limits for On-Demand Service Instances</a>.</td></tr>
    <tr><td><strong>Paid Plan</strong></td>
        <td>Check this box to indicate that this service plan is paid.</td></tr>
    <tr><td><strong>MySQL VM Type</strong></td>
        <td>Select a VM type for the MySQL nodes.</td></tr>
    <tr><td><strong>Jumpbox VM Type</strong></td>
        <td>Only for highly available cluster plans. Select a VM type for the MySQL jumpbox node.
            This VM is also called <code>mysql-monitor</code>. </td></tr>
    <tr><td><strong>MySQL Persistent Disk</strong></td>
        <td>Select a disk size. This disk stores the MySQL data.<br>
            For sizing recommendations,
            see <a href="recommended.html#persistent"> Persistent Disk Usage</a>.
    </td></tr>
    <tr><td><strong>Jumpbox Persistent Disk</strong></td>
        <td>Only for highly available cluster plans. Select a disk size.
          This disk stores backups. <br> For sizing recommendations,
          see <a href="recommended.html#persistent"> Persistent Disk Usage</a>.</td></tr>
    <tr><td><strong>MySQL Availability Zone(s)</strong></td>
        <td> BOSH deploys your service instances to the selected AZs.
          If more than one AZ is selected, BOSH randomizes which AZ to place each VM. <br>
        </td></tr>
  </table>
1. Click **Save**.

<p class="note warning"><strong>Warning:</strong> If you expect your developers
  to upgrade from one plan to another, do not place the plans in separate AZs.
  For example, if you create Plan 1 in AZ1 and Plan 2 in AZ2, developers receive
  an error and cannot continue if they try to upgrade from Plan 1 to Plan 2. This
  prevents them from losing their data by orphaning their disk in AZ1.<br><br>
  If you need to manually migrate the data from one AZ to another, see
  <a href="https://docs.pivotal.io/p-mysql/about-migrate.html">About Data Migration in <%= vars.product_short %></a>.
</p>

###<a id="inactive"></a> (Optional) Deactivate Service Plan

To deactivate a service plan:

1. If the service plan has existing service instances:
    1. Click the section for the plan. For example, **Plan 2**.
    1. Under **Service Plan Access**, select **Disable**.
    1. Click **Save**.
    1. Return to the <%= vars.ops_manager %> Installation Dashboard and click **Apply Changes** to redeploy.
    1. When the deployment has redeployed,
    use the cf CLI or Apps Manager to delete all existing service instances on the service plan.
    1. Return to the <%= vars.product_short %> tile configuration.
1. Click the section for the plan. For example, **Plan 2**.
1. Click **Inactive**.
1. Click **Save**.

###<a id="global"></a> Configure Global Settings

To configure global settings for all service instances:

1. Click **Settings**.

    <%= image_tag("global-settings.png", :alt => "The 'Settings' pane. See the following step for a detailed description of the configurable fields.", :width => "350") %>

1. Configure the fields as follows:
    <table class="nice">
      <col width="30%">
      <tr><th>Field</th><th>Instructions</th></tr>
      <tr><td><strong>Provide public IP addresses to all Service VMs</strong></td>
          <td>Select this checkbox if either of the following apply:<ul>
              <li>Your service instances need an external backup, blobstore, or syslog storage</li>
              <li>You have configured BOSH to use an external blobstore</li></ul>
              </td></tr>
      <tr><td><strong>Maximum service instances</strong></td>
          <td>Enter the global quota for all on-demand instances summed across every on-demand plan.
              For information about determining global quotas, see <a href="recommended.html#serviceplan">
              Service Plan Recommended Usage and Limitations</a>.
             </td></tr>
      <tr><td><strong>Email address</strong></td>
           <td>Enter an email address to send MySQL monitoring notifications to.
              </td></tr>
      <tr><td><strong>Enable off-platform access of MySQL service instances</strong></td>
           <td>For information about configuring off-platform access,
               see [Enabling Service-Gateway Access](enable-service-gateway.html).
              </td></tr>
      <tr><td><strong>Tags</strong></td>
           <td>Enter a comma separated list of key-value pairs for tagging service instance VMs and disks.
             The accepted format depends on the underlying Cloud Provider.
             For example, Google Cloud Platform does not allow uppercase characters.
              </td></tr>
    </table>

1. Click **Save**.

###<a id="mysql"></a> Configure MySQL

To set MySQL defaults and enable developers to customize their instances:

1. Click **Mysql Configuration**.

    <%= image_tag("mysql-config.png", :alt => "The 'Mysql Configuration' pane. See the following step for a detailed description of the configurable fields.", :width => "300") %>

1. Configure the fields as follows:
  <table>
    <tr><th>Field</th><th>Instructions</th></tr>
    <tr><td><strong>Enable Lower Case Table Names</strong></td>
        <td>Select this checkbox to store all table names in lowercase.
            This sets the MySQL server system variable
            <code>lower\_case\_table\_names</code> to <code>1</code> on all <%= vars.product_short %> instances by default. <br>
            To permit developers to override this default, see the checkbox below. <br>
            For more information about <code>lower\_case\_table\_names</code> , see the <a href="https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_lower_case_table_names">MySQL documentation</a>.
            <p class="note warning"><strong>Warning:</strong> Before you enable this feature,
ensure all tables have lowercase names. Tables with uppercase names are inaccessible
after enabling lowercase table names.</p>
         </td></tr>
    <tr><td><strong>Allow Developers To Override Lower Case Table Names</strong></td>
        <td>Select this checkbox to permit developers to override the configured default <strong>Enable Lower Case Table Names</strong> value.
            For more information, see <a href="./change-default.html#configuring">Optional Parameters for the <%= vars.product_short %> Service Instances</a>.</td></tr>
    <tr><td><strong>Enable Local Infile</strong></td>
        <td>Select this checkbox to enable data downloading from the local file system of the client.
            VMware discourages selecting this checkbox. Before you enable local in-file,
            review the security issues associated with <code>LOAD DATA LOCAL</code>.
            See the <a href="https://dev.mysql.com/doc/refman/5.7/en/load-data-local.html">MySQL documentation</a>.
    </td></tr>
    <tr>
      <a name="limit-disk-use"></a>
      <td><strong>Limit binary log disk use to 33% of disk capacity</strong></td>
      <td>Select this checkbox if you have leader-follower or <%= vars.single_leader_plan %> instances
            with high-transaction rates.
            Limiting the size of the transaction logs reduces the risk of the persistent disk
            reaching capacity and causing service interruption.
    </td></tr>
    <tr><td><strong>Wait Timeout</strong></td>
        <td>Enter the amount of time in seconds that MySQL waits to close inactive connections.
            For more information about <code>wait\_timeout</code>, see the <a href="https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_wait_timeout">MySQL documentation</a>.
    </td></tr>
  </table>

###<a id="backups"></a> Configure Backups

To learn how backups work, see [About Backups](./backup-restore.html#about-backups).

To configure backups:

<p class="note"><strong>Note:</strong> You must configure backups.
  You cannot disable this feature.
</p>

1. Click **Backups**.

    <%= image_tag("backups.png", :alt => "The radio buttons for backup configuration are
        Ceph or Amazon S3, SCP, GCS, and Azure.", :width => "200") %>

1. Select a **Backup configuration** and follow the procedure for your storage solution
in the _Configuring Automated Backups_ topic:
  * **Ceph or Amazon S3:** <%= vars.product_short %> runs an [Amazon S3](https://aws.amazon.com/documentation/s3/) client
    that saves backups to an S3 bucket,
    a [Ceph](https://docs.ceph.com/en/latest/) storage cluster, or another S3-compatible endpoint certified by VMware.<br>
    For instructions about using Ceph or Amazon S3 for backups, see [Back Up to Ceph or S3](./automated-backup.html#ceph-or-s3).<br><br>
  * **SCP:** <%= vars.product_short %> runs an Secure Copy Protocol (SCP) command that secure-copies backups to a VM
    or physical machine operating outside of your deployment. This is the fastest option. <br>
    SCP enables you to securely transfer files between two hosts.
    You can provision the backup machine separately from your installation.
     <br>For instructions about using SCP for backups, see [Back Up with SCP](./automated-backup.html#scp).<br><br>
  * **GCS:** <%= vars.product_short %> runs a [Google Cloud Storage (GCS)](https://cloud.google.com/storage/) SDK
    that saves backups to an GCS bucket. <br>For instructions about using GCS for backups, see [Back Up to GCS](./automated-backup.html#gcs). <br><br>
  * **Azure:** <%= vars.product_short %> runs an [Azure](https://docs.microsoft.com/en-us/azure/storage/)
    SDK that saves backups to an Azure storage account.<br>For instructions about using Azure for backups,
    see [Back Up to Azure Storage](./automated-backup.html#azure).

###<a id="security"></a> Configure Security

To configure the security settings for the MySQL service, do one or both:

* Enable TLS for the MySQL service. See [Configure TLS](#security-tls) below.
* Store your service instance credentials in runtime CredHub. See [Configure Secure Service Instance Credentials](#security-service-instance-creds) below.

![The 'Security' pane. The following 'TLS Options' are listed: 'Not Configured',
'Optional - Developers may configure their service VMs to use TLS', and
'Required - All connections MUST use TLS.
Any application that is not using TLS communcation with MySQL will break.'](security.png)

####<a id="security-tls"></a> Configure TLS

To enable TLS for the MySQL service:


1. Do the procedures in [Preparing for TLS](prepare-tls.html).

1. Click **Security**.
1. Under **TLS Options**, select one of the following:
    <table class="nice">
      <col width="30%">
      <tr><th>Field</th><th>Instructions</th></tr>
      <tr><td><strong>Optional</strong></td>
          <td>This enables developers to configure their MySQL service VMs to use TLS.
            <br><br>
            <ul>
              <li><strong>Accept only TLS v1.2 connections:</strong> Selecting this checkbox enforces TLS v1.2
                as the minimum TLS version for client connections.
              </li>
            </ul>
          </td></tr>
      <tr><td><strong>Required</strong></td>
          <td>This enables developers to configure their MySQL service VMs to use TLS
            and requires all MySQL service VMs to only accept secure connections.
            <br><br>
            <ul>
              <li><strong>Accept only TLS v1.2 connections:</strong> Selecting this checkbox enforces TLS v1.2
                as the minimum TLS version for client connections.
              </li>
            </ul>
          <p class="note warning"><strong>Warning:</strong> Selecting <strong>Required</strong> breaks any
            apps that are not currently connecting over TLS.</p>
          </td></tr>
    </table>

    <div class="note warning"><strong>Warning:</strong> Enforcing TLS v1.2 has the following effects:
      <ul>
        <li>For apps using MySQL Connector/J 5.1.44 and earlier, apps might break.</li>
        <li>For apps using MySQL Connector/J 5.1.44 to 5.1.48, developers have to rebind the apps.</li>
      </ul>
      The TLS v1.2 restriction is a global setting, so it applies to every service instance.
      Any apps in the foundation using an old version of MySQL Connector/J fail to connect to MySQL after this new setting is applied.
    </div>


1. Click **Save**.
1. After deploying the tile, notify your developers that they must enable TLS for their service instances and activate TLS for their apps.
See [Using TLS](using-tls.html).

####<a id="security-service-instance-creds"></a> Configure Secure Service Instance Credentials

You can store your service instance credentials in runtime CredHub instead of the Cloud Controller database (CCDB).
For more information about runtime CredHub, see [CredHub](https://docs.pivotal.io/pivotalcf/credhub/).

To store your service instance credentials in runtime CredHub:

1. Ensure that you have configured the <%= vars.app_runtime_abbr %> tile to support securing service instance credentials in runtime CredHub.
   For instructions, see [Step 1: Configure the <%= vars.app_runtime_abbr %> Tile](https://docs.pivotal.io/pivotalcf/opsguide/secure-si-creds.html#pas-config).
1. Click **Security**.
1. Select the **Enable Secure Service Instance Credentials** checkbox.
1. Click **Save**.
1. After deploying the tile, notify the developers that they must unbind and rebind any existing service instances bindings if they want to use secure service instance credentials. Developers must:

    1. Unbind the service instance from the app by running:

        ```
        cf unbind-service APP SERVICE-INSTANCE
        ```
    1. Rebind the service instance to the app by running:

        ```
        cf bind-service PP SERVICE-INSTANCE
        ```
    1. Restart the app to apply the new binding by running:

        ```
        cf restart APP
        ```
    1. Verify that the binding includes CredHub pointers in the `VCAP_SERVICES` environment variable by running:

        ```
        cf env APP
        ```
        For example:
        <pre class="terminal">$ cf env my-app
        Getting env variables for app my-app in org system / space example as admin...
        OK
        System-Provided:
        {
         "VCAP_SERVICES": {
          "p.mysql": [
           {
            "credentials": {
             "credhub-ref": "/c/548966e5-e333-4d65-8773-7b4e3bb6ca97/4a246b0b-83bb-46d0-b8ac-35a93374ae67/caf6e32e-7361-4869-9a57-54ab8ae67b3f/credentials"
            },
        [...]
        </pre>

<%= partial vars.path_to_partials + "/mysql/rebind-warning" %>

###<a id="monitoring"></a> Configure Monitoring

To enable monitoring and logging in the MySQL service:

1. Click **Monitoring**.

    <%= image_tag("monitoring.png",
    :alt => "Fields for configuring monitoring. See the following step for detailed descriptions of the configurable fields.",
    :width => "300") %>

1. Configure the fields as follows:
  <table>
    <tr><th>Field</th><th>Instructions</th></tr>
    <tr><td><strong>Metrics Polling Interval</strong></td>
        <td>Enter the amount of time in seconds for the frequency that the monitor polls for metrics.
            All service instances emit metrics about the health and status of the MySQL server.</td></tr>
    <tr><td><strong>Enable User Statistics Logging</strong></td>
        <td>Select this checkbox to collect user statistics. You can use these statistics to better
          understand server activity and identify load sources.
            For more information about user statistics, see the <a href="https://www.percona.com/doc/percona-server/5.7/diagnostics/user_stats.html">MySQl documentation</a>.
            </td></tr>
    <tr><td><strong>Enable Server Activity Logging</strong></td>
        <td>Select this checkbox to record who connects to the servers and what queries are processed using the Percona Audit Log Plugin.
            For more information, see the <a href="https://www.percona.com/doc/percona-server/5.7/management/audit_log_plugin.html">Percona documentation</a>
            <p class="note"><strong>Note:</strong> MySQL audit logs are not forwarded to the syslog server because they can contain personally identifying information (PII) and secrets.<br>
            You can use the <a href="https://community.pivotal.io/s/article/script-to-download-mysql-logs-for-pas-tile-ha-clusters"<code>download-logs</code></a> script to retrieve the logs, which each MySQL cluster node VM stores in <code>/var/vcap/store/mysql\_audit\_logs/</code>.
          </p>
           </td></tr>
    <tr><td><strong>Enable Read Only Admin User</strong></td>
        <td>Select this checkbox to create a read-only admin user, named <code>roadmin</code>, on each service instance.
            This user can be used for auditing and monitoring without risking
            mutating or changing any data. This is because <code>roadmin</code> cannot make changes to data.
            <br><br>
            For instructions about retrieving the credentials for <code>roadmin</code>, see <a href="./troubleshoot.html#instance-creds">Retrieve Admin and Read-Only Admin Credentials for a Service Instance</a>.
            The read-only admin user is always named <code>roadmin</code>, however, the password varies by service instance.</td></tr>
  </table>

1. Click **Save**.

###<a id="syslog"></a> Configure System Logging

To enable RFC 5424 system logging for the MySQL broker and service instance VMs:

1. Click **Syslog**.

1. Click **Yes**.

    <%= image_tag("syslog.png", :alt => "Fields for configuring syslog. See the following step for detailed descriptions of the configurable fields.", :width => "550") %>

1. Configure the fields as follows:
  <table>
    <tr><th>Field</th><th>Instructions</th></tr>
    <tr>
        <td><strong>Address</strong></td>
        <td>Enter the IP address or hostname of the syslog server for sending logs. For example:
            <code>logmanager.example.com</code>.</td></tr>
    <tr><td><strong>Port</strong></td>
        <td>Enter the port of the syslog server for sending logs. For example: <code>29279</code>.</td></tr>
    <tr><td><strong>Transport Protocol</strong></td>
        <td>Select the protocol you want to use to send system logs. VMware recommends using TCP.</td></tr>
    <tr><td><strong>Enable TLS</strong></td>
    <td>If you select TCP, you can also select to send logs encrypted over TLS.</td></tr>
    <tr><td><strong>Permitted Peer</strong></td>
        <td>Enter either:
          <ul>
            <li>The accepted fingerprint in SHA1 format.</li>
            <li>The name of the remote peer. For example: <code>*.example.com</code>.</li>
          </ul>
        </td></tr>
    <tr><td><strong>SSL Certificate</strong></td>
        <td>Enter the SSL certificates for the syslog server. This ensures the logs are transported securely.</td></tr>
  </table>
  <p class="note"><strong>Note:</strong> If your syslog server is external to your deployment,
    you might need to select
    <strong>Provide public IP addresses to all Service VMs</strong> on the <strong>Settings</strong> page.
    See <a href="#global">Configure Global Settings</a> above.
  <p>

1. Click **Save**.

###<a id="service-instance-upgrades"></a> Configure Service Instance Upgrades

This section configures the `upgrade-all-service-instances` errand.
<%= vars.product_short %> uses this errand to upgrade service instances.
For more information about the `upgrade-all-service-instances` errand,
see [upgrade-all-service-instances](./errands.html#upgrade-all-service-instances).

To configure service instance upgrades.

1. Click **Service Instance Upgrades**.

    <%= image_tag("service-instance-upgrades.png", :alt => "Screenshot of service instance upgrades section in the MySQL tile in Ops Manager. Includes a header called 'Configuration for the upgrade-all-service-instances errand and several fields, described below. ") %>

1. Configure the fields as follows:
  <table>
    <tr><th>Field</th><th>Instructions</th></tr>
    <tr>
        <td><strong>Number of simultaneous upgrades</strong></td>
        <td>Enter the maximum number of service instances that can upgrade at the same time.
        The minimum value is 0 and the maximum is 1 less than the number of BOSH workers. Increasing this value reduces the runtime of service instance upgrades.
        <p class="note"><strong>Note:</strong> To determine the number of BOSH workers, navigate to <strong>BOSH Director</strong> > <strong>Director Config</strong> and locate the value of <strong>Director Workers</strong>.
        </p>
        </td>
    </tr>
    <tr><td><strong>Number of upgrade canary instances</td>
        <td>Enter the number of service instances to upgrade first before upgrading the rest of the instances.
            Increasing this value enables service instance upgrades to fail faster.</td>
    </tr>
    <tr><td><strong>BOSH Upgrade Timeout</td>
        <td>Enter the amount of time in seconds to wait for BOSH to respond before timing out when upgrading service instances.
            Increasing this value enables service instance upgrades to fail faster.</td>
    </tr>
    <tr>
      <td>
        <strong>Please type 'X' to acknowledge that you have run...</strong>
      </td>
        <td>
          If this is a fresh installation, enter `X`. Do not be concerned with the
          label instructions.
        </td>
    </tr>
</table>

1. Click **Save**.

###<a id="errands"></a> (Optional) Review Errands

Errands are scripts that run at specfic times to do various tasks.
<%= vars.product_short %> can run errands to manage the broker and service instances.
You do not need to change the default configurations for errands.

<p class="note warning"><strong>Warning:</strong> The <strong>Delete All Service Instances and Deregister Broker</strong> errand does
necessary cleanup tasks when you delete the <%= vars.product_short %> tile or re-define plans. Setting this errand to <strong>Off</strong> can cause
problems when attempting to reinstall the tile or re-define plans. VMware recommends that you do not set this errand to <strong>Off</strong>.
</p>

<%= vars.product_short %> uses the following types of errands:


* **Post-Deploy Errands:** These errands run when you click **Apply Changes**.
* **Pre-Delete Errands:** These errands run before you delete the <%= vars.product_short %> tile.

<%= vars.product_short %> also uses errands to configure leader-follower service instances.
For more information about leader-follower errands, see <a href="./errands.html">Errands</a>.

You can use errands when troubleshooting the broker or service instances.
For more information about using errands for troubleshooting, see [Run Service
Broker Errands to Manage Brokers and Instances](./troubleshoot.html#broker-errands).


To review errands:

1. Click **Errands**.

    <%= image_tag("errands.png",
    :alt => "Errand list for VMware Tanzu SQL with MySQL for VMs.
    See the following step for detailed descriptions of the configurable dropdowns.",
    :width => "250") %>

1. Review the settings for the following errands:
  <table>
    <tr>
      <th>Errand</th>
      <th>Description</th>
    </tr>

    <tr>
      <th colspan="2" style="text-align:center;">Post-Deploy Errands</th>
    </tr>

    <tr>
      <td><strong>Register On-demand MySQL Broker</strong></td>
      <td>Registers a broker with the Cloud Controller and lists it in the Marketplace.</td>
    </tr>

    <tr>
      <td><strong>Smoke Tests</strong></td>
      <td>Validates basic MySQL operations.</td>
    </tr>

    <tr>
      <td><strong>Validate no IP-based bindings in use before upgrade-all-service-instances</strong></td>
      <td>Checks if service instances have app bindings or service keys using IP addresses or have a TLS certificate that is signed with an IP address. If either is true, the installation fails.</td>
    </tr>

    <tr>
      <td><strong>Upgrade all On-demand MySQL Service Instances</strong></td>
      <td>Upgrades existing instances of a service to its latest installed version.<br><br>
        If you want developers to individually upgrade service instances, set this errand to <code>OFF</code>.
    For more information about individual service instance upgrades,
    see <a href="./upgrade.html#individual-upgrades">About Individual Service Instance Upgrades</a>.</td>
    </tr>

    <tr>
      <th colspan="2" style="text-align:center;">Pre-Delete Errands</th>
    </tr>

    <tr>
      <td><strong>Delete All Service Instances and Deregister Broker</strong></td>
      <td>Deletes all service instances and deregisters the broker.</td>
    </tr>
  </table>

###<a id="stemcell"></a> Verify Stemcell Version and Apply All Changes

To verify your stemcell version and apply all changes:

1. Click **Stemcell Library**.
    For more information about using the **Stemcell Library**, see [Importing and Managing Stemcells](https://docs.pivotal.io/pivotalcf/opsguide/managing-stemcells.html).

1. Verify and, if necessary, import a new stemcell version.

1. Navigate to **<%= vars.ops_manager %> Dashboard** > **Review Pending Changes**.

1. Click **Apply Changes**.

For information about the Xenial stemcells that are compatible with <%= vars.product_short %>,
see [Release Notes](./release-notes.html) or [<%= vars.product_network %>](https://network.pivotal.io/).
